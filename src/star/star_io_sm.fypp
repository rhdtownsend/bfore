! Submodule : star_io_sm
! Purpose   : Input/output routines for star_t

#:include 'forum.inc'

submodule (star_m) star_io_sm

   ! Uses

   use file_m
   use stat_m

   use ISO_FORTRAN_ENV

   ! No implicit typing

   implicit none (type, external)

   ! Procedures

contains

   module procedure read

      integer :: revision

      ! Read the star_t

      call check_type(hdf5io, 'star_t', stat)
      if (PRESENT(stat)) then
         if (stat /= STAT_OK) return
      end if

      call hdf5io%read_attr('REVISION', revision)

      select case(revision)
      case(1)
         call read_rev1_()
      case default
         if (PRESENT(stat)) then
            stat = STAT_INVALID_GROUP_REVISION
            return
         else
            @:ABORT('invalid group revision')
         end if
      end select

      ! Finish

      return

   contains

      subroutine read_rev1_()

         type(hdf5io_t) :: hdf5io_mesh
         type(mesh_t)   :: mesh

         hdf5io_mesh = hdf5io_t(hdf5io, 'mesh_t')
         call mesh%read(hdf5io_mesh, stat)
         call hdf5io_mesh%final()
         if (PRESENT(stat)) then
            if (stat /= STAT_OK) return
         end if

         if (.NOT. (mesh%n_scalar == N_SCALAR .AND. mesh%n_vector == N_VECTOR)) then
            if (PRESENT(stat)) then
            stat = STAT_INVALID_DATASET_DIM
               return
            else
               @:ABORT('invalid dataset dimension')
            end if
         end if

         select type(self)
         type is(star_t)
            self = star_t(mesh)
         class default
            @:ABORT('invalid type')
         end select

         ! Finish

         if (PRESENT(stat)) stat = STAT_OK

         return

      end subroutine read_rev1_

   end procedure read

   !****

   module procedure write

      type(hdf5io_t) :: hdf5io_mesh

      ! Write the star_t

      call hdf5io%write_attr('TYPE', 'star_t')
      call hdf5io%write_attr('REVISION', 1)

      hdf5io_mesh = hdf5io_t(hdf5io, 'mesh_t')
      call self%mesh_t%write(hdf5io_mesh, stat)
      call hdf5io_mesh%final()
      if (PRESENT(stat)) then
         if (stat /= STAT_OK) return
      end if

      ! Finish

      if (PRESENT(stat)) stat = STAT_OK

      return

   end procedure write

end submodule star_io_sm
