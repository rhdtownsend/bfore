! Module  : star_m
! Purpose : Define star_t datatype, representing a star

#:include 'forum.inc'

module star_m

   ! Uses

   use forum_m

   use mesh_m
   use mode_m

   ! No implicit typing

   implicit none (type, external)

   ! Parameter definitions

   integer, parameter :: I_T = 1
   integer, parameter :: I_G = 2
   integer, parameter :: N_SCALAR = 2

   integer, parameter :: I_VN = 1
   integer, parameter :: I_VV = 2
   integer, parameter :: I_VG = 3
   integer, parameter :: N_VECTOR = 3

   ! Derived-type definitions

   type, extends(mesh_t) :: star_t
   contains
      private
      procedure         :: perturb_modes_
      generic, public   :: perturb => perturb_modes_
      procedure, public :: read
      procedure, public :: write
   end type star_t

   ! Interfaces

   interface star_t
      module procedure star_t_params_
   end interface star_t

   ! In star_construct_sm

   interface

      module function star_t_data_(mesh) result(star)
         implicit none (type, external)
         type(mesh_t), intent(in) :: mesh
         type(star_t)             :: star
      end function star_t_data_

      module function star_t_params_(omega, beta, n_refine) result(star)
         implicit none (type, external)
         real(RD), intent(in) :: omega
         real(RD), intent(in) :: beta
         integer, intent(in)  :: n_refine
         type(star_t)         :: star
      end function star_t_params_

   end interface

   ! In star_perturb_sm

   interface

      module subroutine perturb_modes_(self, modes, time)
         implicit none (type, external)
         class(star_t), intent(inout) :: self
         type(mode_t), intent(in)     :: modes(:)
         real(RD), intent(in)         :: time
      end subroutine perturb_modes_

   end interface

   ! In star_io_sm

   interface

      module subroutine read(self, hdf5io, stat)
         implicit none (type, external)
         class(star_t), intent(out)     :: self
         type(hdf5io_t), intent(inout)  :: hdf5io
         integer, intent(out), optional :: stat
      end subroutine read

      module subroutine write(self, hdf5io, stat)
         implicit none (type, external)
         class(star_t), intent(in)      :: self
         type(hdf5io_t), intent(inout)  :: hdf5io
         integer, intent(out), optional :: stat
      end subroutine write

   end interface

   ! Accessibility

   private

   public :: I_T
   public :: I_G
   public :: I_VN
   public :: I_VG
   public :: I_VV
   public :: star_t

end module star_m
