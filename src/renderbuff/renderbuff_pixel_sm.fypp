! Submodule : renderbuff_m
! Purpose   : Pixel routines for renderbuff_t

#:include 'forum.inc'

submodule (renderbuff_m) renderbuff_pixel_sm

   ! No implicit typing

   implicit none (type, external)

   ! Procedures

contains

   module procedure pixel_depth

      @:ASSERT_DEBUG(i_x >= 1 .AND. i_x <= self%n_x, 'invalid index')
      @:ASSERT_DEBUG(i_y >= 1 .AND. i_y <= self%n_y, 'invalid index')

      ! Get the depth associated with pixel (i_x,i_y). Can also be
      ! used to set the depth

      depth => self%PD(i_x,i_y)

      ! Finish

      return

   end procedure pixel_depth

   !****

   module procedure pixel_scalar

      @:ASSERT_DEBUG(i >= 1 .AND. i <= self%n_scalar, 'invalid index')
      @:ASSERT_DEBUG(i_x >= 1 .AND. i_x <= self%n_x, 'invalid index')
      @:ASSERT_DEBUG(i_y >= 1 .AND. i_y <= self%n_y, 'invalid index')

      ! Get the i'th scalar associated with pixel (i_x,i_y). Can also be
      ! used to set the scalar

      scalar => self%PS(i,i_x,i_y)

      ! Finish

      return

   end procedure pixel_scalar

   !****

   module procedure pixel_vector

      @:ASSERT_DEBUG(i >= 1 .AND. i <= self%n_vector, 'invalid index')
      @:ASSERT_DEBUG(i_x >= 1 .AND. i_x <= self%n_x, 'invalid index')
      @:ASSERT_DEBUG(i_y >= 1 .AND. i_y <= self%n_y, 'invalid index')

      ! Get the i'th vectorr associated with pixel (i_x,i_y). Can also be
      ! used to set the vector

      vector => self%PV(i,i_x,i_y)

      ! Finish

      return

   end procedure pixel_vector

end submodule renderbuff_pixel_sm
