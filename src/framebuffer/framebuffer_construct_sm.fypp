! Submodule : framebuffer_construct_sm
! Purpose   : Constructor routines for framebuffer_t

#:include 'forum.inc'

submodule (framebuffer_m) framebuffer_construct_sm

   ! No implicit typing

   implicit none (type, external)

   ! Procedures

contains

   module procedure framebuffer_t_data_

      ! Construct the framebuffer_t from the data

      fbuff%PZ = PZ

      fbuff%n_x = SIZE(PZ, 1)
      fbuff%n_y = SIZE(PZ, 2)

      ! Finish

      return

   end procedure framebuffer_t_data_

   !****

   module procedure framebuffer_t_dims_

      real(RD) :: PZ(n_x,n_y)

      ! Construct the framebuffer_t from the dimensions

      PZ = -HUGE(0._RD)

      fbuff = framebuffer_t_data_(PZ)

      ! Finish

      return

   end procedure framebuffer_t_dims_

   !****

   module procedure framebuffer_t_merge_

      integer              :: n_x
      integer              :: n_y
      integer              :: i
      logical, allocatable :: mask(:,:)

      ! Construct the framebuffer_t by merging fbuffs

      n_x = MINVAL(fbuffs%n_x)
      n_y = MINVAL(fbuffs%n_y)

      @:ASSERT_DEBUG(ALL(fbuffs%n_x == n_x), 'mismatched dimensions')
      @:ASSERT_DEBUG(ALL(fbuffs%n_y == n_y), 'mismatched dimensions')

      fbuff = framebuffer_t(n_x, n_y)

      allocate(mask(n_x, n_y))

      fbuff_loop: do i = 1, SIZE(fbuffs)

         mask = fbuffs(i)%PZ > fbuff%PZ

         fbuff%PZ = MERGE(fbuffs(i)%PZ, fbuff%PZ, mask)

      end do fbuff_loop

      ! Finish

      return

   end procedure framebuffer_t_merge_

end submodule framebuffer_construct_sm
