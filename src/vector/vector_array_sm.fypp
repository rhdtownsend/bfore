! Submodule : vector_array_m
! Purpose   : Array routines for vector_t

#:include 'forum.inc'

submodule (vector_m) vector_array_sm

   ! No implicit typing

   implicit none (type, external)

   ! Procedures

contains

   module procedure to_array_0_

      @:CHECK_BOUNDS(SIZE(comps), 3)

      ! Convert the vector into a (3) array of vector components

      comps = TRANSFER(vectors, MOLD=comps)

      ! Finish

      return

   end procedure to_array_0_

   !****

   #:for rank in range(1, RANK_MAX)

      module procedure to_array_${rank}$_

         @:ASSERT_DEBUG(ALL(SHAPE(comps) == [3, SHAPE(vectors)]), 'dimension mismatch')

         ! Convert the array of vectors into an (3,...) array of vector components

         comps = RESHAPE(TRANSFER(vectors, MOLD=comps), SHAPE=SHAPE(comps))

         ! Finish

         return

      end procedure to_array_${rank}$_

   #:endfor

   !****

   module procedure from_array_0_

      @:CHECK_BOUNDS(SIZE(comps), 3)

      ! Convert the (3) array of vector components into a vector

      vectors = TRANSFER(comps, MOLD=vectors)

      ! Finish

      return

   end procedure from_array_0_

   !****

   #:for rank in range(1, RANK_MAX)

      module procedure from_array_${rank}$_

         @:ASSERT_DEBUG(ALL([3, SHAPE(vectors)] == SHAPE(comps)), 'dimension mismatch')

         ! Convert the (3,...)  array of vector components into an array of vectors

         vectors = RESHAPE(TRANSFER(comps, MOLD=vectors), SHAPE=SHAPE(vectors))

         ! Finish

         return

      end procedure from_array_${rank}$_

   #:endfor

end submodule vector_array_sm
